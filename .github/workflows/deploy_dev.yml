name: Deploy Dev

env:
  MODULES_REGISTRY: ${{ vars.DEV_REGISTRY }}
  CI_COMMIT_REF_NAME: ${{ github.event.inputs.tag }}
  MODULES_MODULE_NAME: ${{ vars.MODULE_NAME }}
  MODULES_MODULE_SOURCE: ${{ vars.DEV_MODULE_SOURCE }}
  MODULES_REGISTRY_LOGIN: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
  MODULES_REGISTRY_PASSWORD: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}
  MODULES_MODULE_TAG: ${{ github.event.inputs.tag }}
  GOLANG_VERSION: ${{ vars.GOLANG_VERSION }}
  GOPROXY: ${{ secrets.GOPROXY }}
  SOURCE_REPO: ${{ secrets.SOURCE_REPO }}
  BASE_IMAGES_VERSION: v0.5.11

on:
  workflow_dispatch:
    inputs:
      alpha:
        type: boolean
        description: Alpha
      beta:
        type: boolean
        description: Beta
      early-access:
        type: boolean
        description: Early-access
      stable:
        type: boolean
        description: Stable
      rock-solid:
        type: boolean
        description: Rock-solid

      tag:
        description: "The module's tag, which must include the -dev1 postfix. For example: v1.21.1-dev1"
        type: string
        required: true

      enableBuild:
        type: boolean
        default: true
        description: "Set to true if build is required"


jobs:
  deploy-dev:
    runs-on: [self-hosted, large]
    name: Deploy dev
    steps:
      - name: PRINT VARS
        run: |
          echo MODULES_REGISTRY=$MODULES_REGISTRY
          echo MODULES_MODULE_SOURCE=$MODULES_MODULE_SOURCE
          echo CI_COMMIT_REF_NAME=$CI_COMMIT_REF_NAME
          echo MODULES_MODULE_NAME=$MODULES_MODULE_NAME
          echo RELEASE_CHANNEL=$RELEASE_CHANNEL
          echo MODULES_MODULE_TAG=$MODULES_MODULE_TAG
        shell: bash
      - name: Validation for tag
        run: |
          echo ${{ github.event.inputs.tag }} | grep -P '^v\d+\.\d+\.\d+-dev1$'
        shell: bash

      - uses: actions/checkout@v4
      - name: Download base images and auth prepare
        run: |
          wget https://fox.flant.com/api/v4/projects/deckhouse%2Fbase-images/packages/generic/base_images/$BASE_IMAGES_VERSION/base_images.yml -O base_images.yml
          cat base_images.yml
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.DEV_REGISTRY }}
          registry_login: ${{ vars.DEV_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.DEV_MODULES_REGISTRY_PASSWORD }}
      - if: ${{ github.event.inputs.enableBuild == 'true' }}
        uses: deckhouse/modules-actions/build@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          source_repo: ${{ secrets.SOURCE_REPO }}
          source_repo_ssh_key: ${{ secrets.SOURCE_REPO_SSH_KEY }}
      - name: deploy Alpha
        if: github.event.inputs.alpha == 'true'
        uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: "alpha"
      - name: deploy Beta
        if: github.event.inputs.beta == 'true'
        uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: "beta"
      - name: deploy Early-access
        if: github.event.inputs.early-access == 'true'
        uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: "early-access"
      - name: deploy Stable
        if: github.event.inputs.stable == 'true'
        uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: "stable"
      - name: deploy Rock-solid
        if: github.event.inputs.rock-solid == 'true'
        uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.DEV_MODULE_SOURCE }}"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: "rock-solid"